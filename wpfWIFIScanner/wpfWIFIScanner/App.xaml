<Application x:Class="wpfWIFIScanner.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:wpfToolKit="clr-namespace:Xceed.Wpf.Toolkit;assembly=Xceed.Wpf.Toolkit"
             xmlns:local="clr-namespace:wpfWIFIScanner"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <Style x:Key="DataGridRowStyle1" TargetType="{x:Type DataGridRow}">
            <Style.Triggers>
                <!-- Когда строка выделена -->
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="LightGreen"/>
                    <!-- Новый фон выделения -->
                    <Setter Property="Foreground" Value="Black"/>
                    <!-- Текст выделенной строки -->
                </Trigger>

                <!-- Когда строка теряет фокус, но остаётся выделенной -->
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsSelected" Value="True"/>
                        <Condition Property="IsKeyboardFocusWithin" Value="False"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="Background" Value="PaleGreen"/>
                    <!-- Фон при потере фокуса -->
                    <Setter Property="Foreground" Value="Black"/>
                    <!-- Текст при потере фокуса -->
                </MultiTrigger>
            </Style.Triggers>
        </Style>



        <Style TargetType="Button" x:Key="Btn_style">
            <Setter Property="Background" Value="#4CAF50"/>
            <Setter Property="Foreground" Value="#dddee4"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="BorderBrush" Value="#388E3C"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Margin" Value="10 15 10 15"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" CornerRadius="5">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True">
                    <Setter Property="Background" Value="#45A049"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!-- Стиль для DataGrid -->
        <Style TargetType="DataGrid" x:Key="DataGrid_style">
            <Setter Property="Background" Value="#fffff0"/>
            <Setter Property="BorderBrush" Value="#D1D1D1"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="RowHeight" Value="25"/>
            <Setter Property="SelectionUnit" Value="FullRow"/>
            <Setter Property="AlternatingRowBackground" Value="#fffff0"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
        </Style>

        <Style TargetType="DataGridColumnHeader">
            <Setter Property="Background" Value="#fffff0"/>
            <!-- Задание фона заголовков колонок -->
            <Setter Property="Foreground" Value="#333"/>
            <!-- Цвет текста заголовков -->
        </Style>

        <!-- Стиль для Label -->
        <Style TargetType="Label" x:Key="Label_style">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="Foreground" Value="#333"/>
        </Style>

        <!-- Стиль для TextBlock (используемый в кнопках) -->
        <Style TargetType="TextBlock" x:Key="Text_style">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="TextAlignment" Value="Center"/>
        </Style>

        <!-- Стиль для StackPanel в кнопках -->
        <Style TargetType="StackPanel" x:Key="StackPanel_style">
            <Setter Property="Orientation" Value="Vertical"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>

        <!-- Стиль для TextBox -->
        <Style TargetType="TextBox">
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Padding" Value="5" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="#333"/>
        </Style>

        <!-- Смена темы -->
        
        <Style TargetType="ToggleButton">
            <Setter Property="Width" Value="50"/>
            <Setter Property="Height" Value="25"/>
            <Setter Property="Background" Value="LightGray"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ToggleButton">
                        <Grid>
                            <!-- Фон кнопки -->
                            <Border x:Name="BackgroundBorder"
                             CornerRadius="13"
                             Background="{TemplateBinding Background}"/>

                            <!-- Ползунок -->
                            <Ellipse x:Name="Thumb"
                              Width="20" Height="20"
                              Fill="White"
                              Margin="2"
                              HorizontalAlignment="Left"/>

                        </Grid>
                        <ControlTemplate.Triggers>
                            <!-- Если кнопка включена -->
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="BackgroundBorder" Property="Background" Value="#8f8f8f"/>
                                <Setter TargetName="Thumb" Property="HorizontalAlignment" Value="Right"/>
                            </Trigger>
                            <!-- Если кнопка выключена -->
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="BackgroundBorder" Property="Background" Value="LightGray"/>
                                <Setter TargetName="Thumb" Property="HorizontalAlignment" Value="Left"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Стиль для окна (Window) -->
        <Style TargetType="Window" x:Key="Window_style">
            <Setter Property="Background" Value="#fffff0"/>
            <Setter Property="FontFamily" Value="Segoe UI"/>
            <Setter Property="FontSize" Value="14"/>
            <!--<Setter Property="WindowStartupLocation" Value="CenterScreen"/>-->
            <Setter Property="ResizeMode" Value="CanResizeWithGrip"/>
        </Style>

        <!-- Стиль для RowDefinition в Grid -->
        <Style TargetType="RowDefinition" x:Key="RowDef_style">
            <Setter Property="Height" Value="Auto"/>
        </Style>

        <!-- Стиль для ColumnDefinition в Grid -->
        <Style TargetType="ColumnDefinition" x:Key="ColumnDef_style">
            <Setter Property="Width" Value="Auto"/>
        </Style>
    </Application.Resources>
</Application>
